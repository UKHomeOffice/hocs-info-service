pipeline:
  wait-for-keycloak:
    image: quay.io/ukhomeofficedigital/hocs-docker-tools:build-4
    commands:
    - |
      until $(curl --output /dev/null --silent --head --fail http://keycloak:8080/auth/realms/master/.well-known/openid-configuration); do
        echo "waiting for keycloak"
        sleep 5
      done
    - |
      export TKN=$(curl -X POST 'http://keycloak:8080/auth/realms/master/protocol/openid-connect/token' -H "Content-Type: application/x-www-form-urlencoded" -d "username=admin" -d 'password=password1' -d 'grant_type=password' -d 'client_id=admin-cli' | jq -r '.access_token')
    - |
      curl -vX POST http://keycloak:8080/auth/admin/realms -d @keycloak/local-realm.json --header "Authorization: Bearer $TKN" --header "Content-Type: application/json"

  build-project:
    image: quay.io/ukhomeofficedigital/openjdk8
    commands:
      - export SPRING_PROFILES_ACTIVE='development, local, test'
      - export DB_HOST='postgres'
      - export KEYCLOAK_SERVER_ROOT=http://keycloak:8080
      - export AWS_LOCAL_HOST='localstack'
      - ./gradlew build
    when:
      event: [push, pull_request, tag]

  sonar-scanner:
    image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.1
    when:
      event: [push, pull_request, tag]

  docker-build:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker build -t hocs-info-service .
    when:
      branch: [master, refs/tags/*]
      event: [push, tag]

  install-docker-image:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    secrets:
      - docker_password
    commands:
      - docker login -u="ukhomeofficedigital+hocs" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag hocs-info-service quay.io/ukhomeofficedigital/hocs-info-service:build-$${DRONE_BUILD_NUMBER}
      - docker tag hocs-info-service quay.io/ukhomeofficedigital/hocs-info-service:latest
      - docker push quay.io/ukhomeofficedigital/hocs-info-service:build-$${DRONE_BUILD_NUMBER}
      - docker push quay.io/ukhomeofficedigital/hocs-info-service:latest      
    when:
      branch: master
      event: push

  docker-semver-tag:
    image: quay.io/ukhomeofficedigital/hocs-version-bot:build-25
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
      - DOCKER_API_VERSION=1.37
    secrets:
      - github_password
      - docker_password
      - git_password
    commands:
      - /app/hocs-deploy --version=$${SEMVER} --serviceGitToken=$${GIT_PASSWORD} --service=hocs-info-service --gitToken=$${GITHUB_PASSWORD} --gitRepo="https://gitlab.digital.homeoffice.gov.uk/hocs/hocs-versions.git" --environment=qa --dockerRepository=quay.io/ukhomeofficedigital --sourceBuild=$${IMAGE_VERSION} --registryUser=ukhomeofficedigital+hocs --registryPassword=$${DOCKER_PASSWORD}
    when:
      event: deployment
      environment: qa

  clone-kube-project:
    image: plugins/git
    commands:
      - git clone https://github.com/UKHomeOffice/kube-hocs-info-service.git
    when:
      event: [push, tag, deployment]

  deploy-to-qa:
    image: quay.io/ukhomeofficedigital/kd:v1.12.1
    environment:
      - KUBE_NAMESPACE=cs-qa
      - ENVIRONMENT=qa
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_info_service_qa
    commands:
      - source version.txt
      - echo $VERSION
      - cd kube-hocs-info-service
      - ./deploy.sh
    when:
      event: deployment
      environment: qa

  deploy-to-dev-from-build-number:
    image: quay.io/ukhomeofficedigital/kd:v1.12.1
    environment:
      - KUBE_NAMESPACE=cs-dev
      - ENVIRONMENT=dev
      - VERSION=build-${DRONE_BUILD_NUMBER}
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_info_service_dev
    commands:
      - cd kube-hocs-info-service
      - ./deploy.sh
    when:
      branch: master
      event: [push, tag]

  deployment:
    image: quay.io/ukhomeofficedigital/kd:v1.12.1
    environment:
      - KUBE_NAMESPACE=cs-${DRONE_DEPLOY_TO}
      - ENVIRONMENT=${DRONE_DEPLOY_TO}
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_info_service_dev
      - hocs_info_service_qa
      - hocs_info_service_demo      
    commands:
      - cd kube-hocs-info-service
      - ./deploy.sh
    when:
      event: deployment
      environment: [dev, demo]

  deploy-to-prod:
    image: quay.io/ukhomeofficedigital/kd:v1.12.1
    environment:
      - KUBE_NAMESPACE=cs-prod
      - ENVIRONMENT=prod
      - VERSION=${IMAGE_VERSION}
      - KUBE_SERVER=https://kube-api-prod.prod.acp.homeoffice.gov.uk
    secrets:
      - hocs_info_service_prod
    commands:
      - cd kube-hocs-info-service
      - ./deploy.sh
    when:
      event: deployment
      environment: prod


services:
  keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password1
      DB_VENDOR: h2
  postgres:
    image: quay.io/ukhomeofficedigital/postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
  localstack:
    image: localstack/localstack:latest
    environment:
      HOSTNAME_EXTERNAL: localstack
      DEFAULT_REGION: eu-west-2
      SERVICES: sqs,s3
  aws_cli:
    image: quay.io/ukhomeofficedigital/hocs-docker-tools
    command:
    - /bin/sh
    - -c
    - |
      aws --endpoint-url=http://localstack:4572 s3 mb s3://untrusted-bucket
      aws --endpoint-url=http://localstack:4572 s3 mb s3://trusted-bucket
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue-dlq
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue-dlq
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue-dlq

    environment:
      AWS_ACCESS_KEY_ID: UNSET
      AWS_SECRET_ACCESS_KEY: UNSET
      AWS_DEFAULT_REGION: 'eu-west-2'



